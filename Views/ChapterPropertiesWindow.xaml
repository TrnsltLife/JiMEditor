<Window x:Class="JiME.Views.ChapterPropertiesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
				xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        Title="Tile Block Properties" Style="{StaticResource DefaultWindow}" Width="750" WindowStartupLocation="CenterScreen" ContentRendered="Window_ContentRendered" Closing="Window_Closing">

	<Window.Resources>
		<local:BoolInvertVisibility x:Key="b2vis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<CollectionViewSource x:Key="cvsTriggeredBy" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="isEmpty" Direction="Descending"/>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsTriggerAfterFirst" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="isEmpty" Direction="Descending"/>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsTriggerAfterAll" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="isEmpty" Direction="Descending"/>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>

		<StackPanel  Margin="5,5,5,0">
			<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="In the Companion App, a Tile Block first shows the Flavor Text, if any, followed by the random or fixed Tile layout for this Block."/>

			<Border Style="{StaticResource callout}" Margin="0,0,0,0">
				<StackPanel>
					<UniformGrid Columns="2">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="Tile Block Name:"/>
							<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<TextBox x:Name="nameTB" Text="{Binding chapter.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}"/>
						</StackPanel>

						<!--triggered by-->
						<StackPanel>
							<TextBlock Text="Triggered By (Required):" Style="{StaticResource Heading}" Margin="0,5"/>
							<StackPanel Orientation="Horizontal">
								<ComboBox ItemsSource="{Binding Source={StaticResource cvsTriggeredBy}}" DisplayMemberPath="dataName" SelectedValue="{Binding chapter.triggeredBy}" SelectedValuePath="dataName" HorizontalAlignment="Left" Width="200" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}" VerticalAlignment="Center"/>

								<Button x:Name="addTriggerByButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerByButton_Click" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>
						</StackPanel>
					</UniformGrid>

					<!--dynamic setting-->
					<CheckBox x:Name="dynamicCB" Foreground="White" Content="This Block is Dynamic" VerticalAlignment="Center" IsChecked="{Binding chapter.isDynamic}" Margin="0,5,0,0"/>
					<TextBlock x:Name="dynText" Text="If a Tile Block MAY or MAY NOT be activated during a Scenario, mark it as Dynamic. For example, this is useful for optional side quests that may not always appear during a Scenario. This helps the Companion App build the Scenario properly. Dynamic Blocks don't have a Fog of War. The Start Block cannot be Dynamic." Margin="0,5,0,0" Style="{StaticResource SubText}" TextWrapping="Wrap"/>
				</StackPanel>
			</Border>

			<!--<Border x:Name="hintBlock" Style="{StaticResource callout}" Margin="0,10,0,0">
				<StackPanel>
					<TextBlock Text="Block Hinting (Optional):" Style="{StaticResource Heading}"/>

					-->
			<!--dynamic setting-->
			<!--<CheckBox x:Name="dynamicCB" Foreground="White" Content="This Block is Dynamic" VerticalAlignment="Center" IsChecked="{Binding chapter.isDynamic}" Margin="0,5,0,0"/>
					<TextBlock Text="If a Tile Block MAY or MAY NOT be activated during a Scenario, mark it as Dynamic. For example, this is useful for optional side quests that may not always appear duing a Scenario. This helps the Companion App build the Scenario properly. Dynamic Blocks don't have a Fog of War." Margin="0,5,0,0" Style="{StaticResource SubText}" TextWrapping="Wrap"/>-->

			<!--<TextBlock Text="Block Hinting (Optional):" Style="{StaticResource Heading}" Margin="0,10,0,0"/>-->
			<!--

					<TextBlock Text="Optionally choose the Tile Block you'd prefer this Block to attach to in the Companion App. During Scenario creation, the Companion App will attempt to make this Block attach to the one you select below. If it can't (because it doesn't fit) or you select 'None', a random Block will be used instead." Style="{StaticResource SubText}" TextWrapping="Wrap"/>

					<ComboBox ItemsSource="{Binding scenario.chapterObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding chapter.attachHint}" SelectedValuePath="dataName" HorizontalAlignment="Left" Width="250" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}" VerticalAlignment="Center" Margin="0,5,0,0"/>

				</StackPanel>
			</Border>-->

			<Border Style="{StaticResource callout}" Margin="0,5">
				<StackPanel>
					<TextBlock Text="Block Tiles" Style="{StaticResource Heading}"/>
					<StackPanel Orientation="Horizontal">
						<CheckBox x:Name="randomToggleCB" Content="This Block uses random Tiles." Foreground="White" IsChecked="{Binding chapter.isRandomTiles}" VerticalAlignment="Center" Margin="0,0,10,0" Click="RandomToggleCB_Click" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}"/>
						<Button x:Name="TileEditButton" Click="TileEditButton_Click" Background="DodgerBlue" HorizontalAlignment="Left" Foreground="White" Height="36">
							<StackPanel Orientation="Horizontal" Margin="5,0">
								<TextBlock Text="Tile Editor..." Style="{StaticResource Heading}" VerticalAlignment="Center" Margin="0,0,5,0"/>
								<Image Source="/JiME;component/Assets/edit.png" Height="24"/>
							</StackPanel>
						</Button>
						<StackPanel Orientation="Vertical" Width="300" Margin="10,5,0,0" >
							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Height="40">
							Use the Tile Editor to define which tiles are in this Block. <Bold>The Start Block cannot use random tiles</Bold>.
							</TextBlock>
						</StackPanel>
					</StackPanel>

					<!--pre-explored toggle-->
					<!--<TextBlock Text="Pre-Exploration" Style="{StaticResource Heading}" Margin="0,10,0,0"/>-->
					<CheckBox x:Name="preExCB" IsChecked="{Binding chapter.isPreExplored}" Content="This Block starts already Explored (Start Block only)" Foreground="White" Margin="0,5,0,0"/>
					<TextBlock x:Name="preExText" Style="{StaticResource SubText}" Text="If this is the Start Block, you can decide whether the tiles are pre-explored. With this option CHECKED (default), the Block begins with its tiles already Explored (no Explore Token on them), and any Interactive Tokens on its tiles start revealed. With this option NOT CHECKED, all tiles in the Block except the one marked as the player start tile are unexplored, and any Interactive Tokens start unrevealed." Margin="0,5,0,0" TextWrapping="Wrap"/>
				</StackPanel>
			</Border>

			<!--random token interactions-->
			<Border x:Name="randomBlock" Style="{StaticResource callout}" Margin="0,0,0,0">
				<StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Style="{StaticResource Heading}" Text="Random Token Interaction Group"/>
						<CheckBox x:Name="useRandomCB" Content="This Block uses randomly assigned Tokens" Foreground="White" VerticalAlignment="Center" Margin="20,0" IsChecked="{Binding chapter.usesRandomGroups}" Click="useRandomCB_Click"/>
						<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32">
							<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
						</Button>
					</StackPanel>
					<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
						Select an Interaction Group below. Then designate how many of the Events in the group will be randomly used. A mix of Fixed and Random Token Interactions can be used in a Block.
					</TextBlock>
					<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0" >
<Bold>The Start Block cannot use Token Interaction Groups. Only Events that are marked Token Interaction can be in a Group.</Bold>
					</TextBlock>
					<UniformGrid Columns="2" Margin="0,5,0,0">
						<ComboBox Name="randInter" ItemsSource="{Binding randomInteractions}" VerticalAlignment="Center" SelectionChanged="randInter_SelectionChanged" IsEnabled="{Binding chapter.usesRandomGroups}"/>
						<StackPanel Margin="10,0">
							<TextBlock x:Name="selectedInfoText" Style="{StaticResource SubText}" TextWrapping="Wrap" Text="There are X Token Interactions in the selected group." VerticalAlignment="Center" FontWeight="Bold"/>
							<TextBlock x:Name="fixedCountText" Style="{StaticResource SubText}" Text="There are X fixed Tokens in this Block." FontWeight="Bold"/>
						</StackPanel>
					</UniformGrid>

					<TextBlock Text="NOTE: If you set this Group and you later change one or more Events in the Group to no longer be a Token Interaction, the Group will no longer be a valid Token Interaction Group." TextWrapping="Wrap" Style="{StaticResource Heading}" Margin="0,5,0,0"/>

					<TextBlock x:Name="spaceInfoText2" Style="{StaticResource Heading}" Text="There are X spaces available on this Block's tiles to place Tokens." Margin="0,5,0,0"/>

					<StackPanel Orientation="Horizontal">
						<TextBlock x:Name="numIntersUsedText" Style="{StaticResource SubText}" Text="Randomly use how many of the Events from the selected Interaction Group, up to a maximum of X?" VerticalAlignment="Center"/>
						<TextBox Text="{Binding chapter.randomInteractionGroupCount}" x:Name="numIntersUsed" Width="25" Margin="10,0" TextChanged="numIntersUsed_TextChanged" Height="24" IsEnabled="{Binding chapter.usesRandomGroups}"/>
					</StackPanel>
				</StackPanel>
			</Border>

			<!--text-->
			<Border x:Name="flavorBox" Style="{StaticResource callout}" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}" Margin="0,5,0,5">
				<StackPanel>
					<TextBlock Text="Flavor Text" Style="{StaticResource Heading}"/>
					<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when the Tile Block is activated. It is only shown once. <Bold><Italic>Optional</Italic></Bold>
					</TextBlock>
					<Grid Visibility="{Binding ElementName=noflavor,Path=IsChecked,Converter={StaticResource b2vis}}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
							<!-- <TextBlock x:Name="flavorTB" Text="{Binding chapter.flavorBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/> -->
							<FlowDocumentScrollViewer x:Name="flavorTB" Document="{Binding FlavorFlowDocument}" MaxHeight="32" Foreground="White" VerticalScrollBarVisibility="Disabled"/>
						</Border>
						<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46">
							<Image Source="/JiME;component/Assets/edit.png"/>
						</Button>
					</Grid>
					<CheckBox x:Name="noflavor" Content="No Flavor Text" Foreground="White" IsChecked="{Binding chapter.noFlavorText}"/>
				</StackPanel>
			</Border>

			<!--trigger when first explored-->
			<Border x:Name="exploreBox" Style="{StaticResource callout}" Margin="0,0,0,10" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}">
				<Grid>
					<StackPanel>
						<TextBlock Text="Trigger On First Exploration (Optional):" Style="{StaticResource Heading}"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="This Trigger is set when any Tile in this Block is first explored. It is only triggered once."/>

						<StackPanel Orientation="Horizontal" Margin="0,5,0,5">
							<ComboBox x:Name="nextTriggerCB" ItemsSource="{Binding Source={StaticResource cvsTriggerAfterFirst}}" HorizontalAlignment="Left" VerticalAlignment="Center" DisplayMemberPath="dataName" MinWidth="250" SelectedValuePath="dataName" SelectedValue="{Binding chapter.exploreTrigger}"/>

							<Button x:Name="addExploreTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddExploreTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</StackPanel>
				</Grid>
			</Border>

			<!--trigger when all tiles have been explored-->
			<Border x:Name="exploredAllTilesBox" Style="{StaticResource callout}" Margin="0,0,0,10">
				<Grid>
					<StackPanel>
						<TextBlock Text="Trigger After Exploring All Tiles (Optional):" Style="{StaticResource Heading}"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="This Trigger is set when all Tiles in this Block have been explored. It is only triggered once."/>

						<StackPanel Orientation="Horizontal" Margin="0,5,0,0">
							<ComboBox x:Name="exploredAllTilesTriggerCB" ItemsSource="{Binding Source={StaticResource cvsTriggerAfterAll}}" HorizontalAlignment="Left" VerticalAlignment="Center" DisplayMemberPath="dataName" MinWidth="250" SelectedValuePath="dataName" SelectedValue="{Binding chapter.exploredAllTilesTrigger}"/>

							<Button x:Name="addExploredAllTilesTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddExploredAllTilesTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</StackPanel>

					<!--footer-->
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
							<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
						</Button>

						<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
							<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
						</Button>
					</StackPanel>
				</Grid>
			</Border>


		</StackPanel>

		<!--footer-->
		<!--
		<StackPanel Grid.Row="1">
			<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
				<WrapPanel HorizontalAlignment="Right" >

					<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
						<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
					</Button>

					<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
						<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
					</Button>
				</WrapPanel>
			</Border>
		</StackPanel>
		-->
	</Grid>

</Window>
