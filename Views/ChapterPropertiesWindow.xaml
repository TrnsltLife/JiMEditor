<Window x:Class="JiME.Views.ChapterPropertiesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
				xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        Title="Tile Block Properties" Style="{StaticResource DefaultWindow}" Width="750" WindowStartupLocation="CenterScreen" ContentRendered="Window_ContentRendered" Closing="Window_Closing">

	<Window.Resources>
		<local:BoolInvertVisibility x:Key="b2invvis"/>
		<local:BoolToVisibility x:Key="b2vis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<CollectionViewSource x:Key="cvsTriggeredBy" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="isEmpty" Direction="Descending"/>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsTriggerAfterFirst" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="isEmpty" Direction="Descending"/>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsTriggerAfterAll" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="isEmpty" Direction="Descending"/>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>

		<StackPanel  Margin="5,5,5,0">
			<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="In the Companion App, a Tile Block first shows the Flavor Text, if any, followed by the random or fixed Tile layout for this Block."/>

			<Border Style="{StaticResource callout}" Margin="0,0,0,0">
				<StackPanel>
					<UniformGrid Columns="2">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="Tile Block Name:"/>
							<TextBlock Style="{StaticResource SubText}">
								A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
							</TextBlock>
							<TextBox x:Name="nameTB" Text="{Binding chapter.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" IsEnabled="{Binding chapter.isStart, Converter={StaticResource binv}}"/>
						</StackPanel>

						<!--triggered by-->
						<StackPanel>
							<TextBlock Text="Triggered By:" Style="{StaticResource Heading}"/>
							<TextBlock Style="{StaticResource SubText}"><Bold><Italic>Required</Italic></Bold></TextBlock>
							<StackPanel Orientation="Horizontal">
								<ComboBox ItemsSource="{Binding Source={StaticResource cvsTriggeredBy}}" DisplayMemberPath="dataName" SelectedValue="{Binding chapter.triggeredBy}" SelectedValuePath="dataName" HorizontalAlignment="Left" Width="200" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}" VerticalAlignment="Center"/>

								<Button x:Name="addTriggerByButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerByButton_Click" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}">
									<Image Source="/JiME;component/Assets/add2.png"/>
								</Button>
							</StackPanel>
						</StackPanel>
					</UniformGrid>
				</StackPanel>
			</Border>

			<Border Style="{StaticResource callout}" Margin="0,5,0,0">
				<StackPanel>
					<TextBlock Text="Block Tiles" Style="{StaticResource Heading}"/>
					<StackPanel Orientation="Horizontal">
						<CheckBox x:Name="randomToggleCB" Content="This Block uses random Tiles." Foreground="White" IsChecked="{Binding chapter.isRandomTiles}" VerticalAlignment="Center" Margin="0,0,10,0" Click="RandomToggleCB_Click"/>
						<Button x:Name="TileEditButton" Click="TileEditButton_Click" Background="DodgerBlue" HorizontalAlignment="Left" Foreground="White" Height="36">
							<StackPanel Orientation="Horizontal" Margin="5,0">
								<TextBlock Text="Tile Editor..." Style="{StaticResource Heading}" VerticalAlignment="Center" Margin="0,0,5,0"/>
								<Image Source="/JiME;component/Assets/edit.png" Height="24"/>
							</StackPanel>
						</Button>
						<TextBlock Style="{StaticResource SubText}" VerticalAlignment="Center" TextWrapping="Wrap">
							Use the Tile Editor to define which tiles are in this Block.
						</TextBlock>
					</StackPanel>

					<!--pre-explored toggle-->
					<!--<TextBlock Text="Pre-Exploration" Style="{StaticResource Heading}" Margin="0,10,0,0"/>-->
					<StackPanel x:Name="preExCB" Orientation="Horizontal">
						<CheckBox IsChecked="{Binding chapter.isPreExplored}" Content="This Block starts already Explored (Start Block only)" Foreground="White" Margin="0,5,0,0"/>
						<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Bottom" Margin="10,0,0,0" ToolTipService.InitialShowDelay="0">
							<Image.ToolTip>
								<TextBlock>
									If this is the Start Block, you can decide whether the tiles are pre-explored. With this<LineBreak/>
									option CHECKED (default), the Block begins with its tiles already Explored (no Explore Token on them),<LineBreak/>
									and any Interactive Tokens on its tiles start revealed. With this option NOT CHECKED, all tiles in the<LineBreak/>
									Block except the one marked as the player start tile are unexplored, and any Interactive Tokens start unrevealed.
								</TextBlock>
							</Image.ToolTip>
						</Image>
					</StackPanel>


					<StackPanel Orientation="Horizontal" Visibility="{Binding chapter.isRandomTiles, Converter={StaticResource b2vis}}" Margin="0,5,0,0">
						<TextBlock Text="Tile Density:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
						<ComboBox x:Name="tileDensityPreferenceCB" 
								  ItemsSource="{Binding DensityPreferenceValues}" 
								  SelectedItem="{Binding chapter.tileDensityPreference}"
								  IsEnabled="{Binding chapter.isRandomTiles}" 
								  HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,5,0,0"/>

						<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Bottom" Margin="10,0,0,0" ToolTipService.InitialShowDelay="0">
							<Image.ToolTip>
								<TextBlock>
									You can choose how well one Tile will try to fit to the other Tiles in the Tile Block<LineBreak/>
									when using random Tiles.<LineBreak/><LineBreak/>
									"First" will take the first viable connection. This is and has been the default behavior<LineBreak/><LineBreak/>
									All the other options will first test all available connections and then randomly choose<LineBreak/>
									one viable placment where the number of attachments match the option you chose.<LineBreak/><LineBreak/>
									As an example, if the Tile finds valid placemnts with 1, 2, 3, 4, 5, or 6 attachments to<LineBreak/>
									the rest of the Tiles in the Tile Block, the various options would go like this:<LineBreak/><LineBreak/>
									LOWEST: randomly choose an option with only 1 connection<LineBreak/>
									LOW Range: randomly choose an option with 1 or 2 connections<LineBreak/>
									LOW-MEDIUM Range: randomly choose an option with 1, 2, 3, or 4 connections<LineBreak/>
									MEDIAN: randomly choose an option with 3 connections<LineBreak/>
									MEDIUM Range: randomly choose an option with 3 or 4 connections<LineBreak/>
									MEDIUM-HIGH Range: randomly choose an option with 3, 4, 5, or 6 connections<LineBreak/>
									HIGH Range: randomly choose an option with 5 or 6 connections<LineBreak/>
									HIGHEST: randomly choose an option with 6 connections<LineBreak/>

								</TextBlock>
							</Image.ToolTip>
						</Image>
					</StackPanel>
				</StackPanel>
			</Border>



			<Border x:Name="hintBlock" Style="{StaticResource callout}" Margin="0,5,0,0">
				<StackPanel>
					<TextBlock Text="Tile Block Attachment Hinting Options:" Style="{StaticResource Heading}" Margin="0,0,0,0"/>

					<!--dynamic setting-->
					<StackPanel Orientation="Horizontal" Margin="0,5,0,5">
						<CheckBox Foreground="White" Content="This Block is Dynamic" VerticalAlignment="Center" IsChecked="{Binding chapter.isDynamic}" Margin="0,5,0,0"/>
						<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Bottom" Margin="10,0,0,0" ToolTipService.InitialShowDelay="0">
							<Image.ToolTip>
								<TextBlock>
									If a Tile Block MAY or MAY NOT be activated during a Scenario, mark it as Dynamic. For example, this is<LineBreak/>
									useful for optional side quests that may not always appear during a Scenario. This helps the Companion App<LineBreak/>
									build the Scenario properly. Dynamic Blocks don't have a Fog of War. The Start Block cannot be Dynamic.
								</TextBlock>
							</Image.ToolTip>
						</Image>
					</StackPanel>

					<!--attachHint-->
					<StackPanel Orientation="Horizontal">

						<StackPanel Orientation="Horizontal">
							<TextBlock Text="Attach to Tile Block:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
							<ComboBox ItemsSource="{Binding chapterAttachOptions}" DisplayMemberPath="dataName" SelectedValue="{Binding chapter.attachHint}" SelectedValuePath="dataName" HorizontalAlignment="Left" Width="250" IsEnabled="{Binding chapter.isStart, Converter={StaticResource binv}}" VerticalAlignment="Center" Margin="0,5,0,0" SelectionChanged="attachHint_SelectionChanged"/>
							<!-- ItemsSource="{Binding scenario.chapterObserver}" -->
						</StackPanel>

						<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Bottom" Margin="10,0,0,0" ToolTipService.InitialShowDelay="0">
							<Image.ToolTip>
								<TextBlock>
									By default, Tile Blocks will try to attach to the Start Block first and if that doesn't work<LineBreak/>
									they will try to attach to a subsequent Block following the order they are listed in this Editor.<LineBreak/>
									<LineBreak/>
									You may optionally choose the Block you'd prefer this Tile Block to attach to in the Companion App.<LineBreak/>
									During Scenario creation, the Companion App will attempt to attach this Tile Block to the selected Block.<LineBreak/> 
									If it can't (because it doesn't fit) it will try to attach to Start or a subsequent block in order.<LineBreak/>
									<LineBreak/>
									If you select 'Random', this Tile Block will be attached to a Block chosen at random.
								</TextBlock>
							</Image.ToolTip>
						</Image>
					</StackPanel>


					<StackPanel Orientation="Horizontal">
						<TextBlock Text="Attach to Specific Tile:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
						<ComboBox x:Name="attachToTileCB" 
								  ItemsSource="{Binding chapterTileAttachOptions}" 
								  DisplayMemberPath="idNumber" 
								  SelectedValuePath="idNumber" 
								  SelectedValue="{Binding chapter.attachTileHint}" HorizontalAlignment="Left" IsEnabled="{Binding chapter.isStart, Converter={StaticResource binv}}" VerticalAlignment="Center" Margin="0,5,0,0"/>

						<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Bottom" Margin="10,0,0,0" ToolTipService.InitialShowDelay="0">
							<Image.ToolTip>
								<TextBlock>
									You can pick a specific tile that belongs to the 'Attach to Tile Block' above.<LineBreak/>
									The Companion App will first try to attach this Tile Block to that exact Tile.<LineBreak/>
									If the Tile Block can't be attached to that Tile, the Companion App will then<LineBreak/>
									try to attach it to other Tiles from the 'Attach to Tile Block'.<LineBreak/>
									<LineBreak/>
									Leave the selection blank or select '0' if you don't want this Tile Block to<LineBreak/>
									attach to a specific Tile.
								</TextBlock>
							</Image.ToolTip>
						</Image>
					</StackPanel>
				</StackPanel>
			</Border>

			<!--random token interactions-->
			<Border x:Name="randomBlock" Style="{StaticResource callout}" Margin="0,5,0,0">
				<StackPanel>
					<StackPanel Orientation="Horizontal">
						<TextBlock Style="{StaticResource Heading}" Text="Random Token Interaction Group"/>
						<CheckBox x:Name="useRandomCB" Content="This Block uses randomly assigned Tokens" Foreground="White" VerticalAlignment="Center" Margin="20,0" IsChecked="{Binding chapter.usesRandomGroups}" Click="useRandomCB_Click"/>
						<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32">
							<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
						</Button>
					</StackPanel>
					<UniformGrid Columns="2" Margin="0,5,0,0">
						<StackPanel Orientation="Horizontal">
							<ComboBox Name="randInter" ItemsSource="{Binding randomInteractions}" VerticalAlignment="Center" SelectionChanged="randInter_SelectionChanged" IsEnabled="{Binding chapter.usesRandomGroups}" MinWidth="290"/>
							<Image Source="/JiME;component/Assets/warning.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Center" Margin="5,0,0,0" ToolTipService.InitialShowDelay="0">
								<Image.ToolTip>
									<TextBlock>
										NOTE: If you set this Group and you later change one or more Events in the Group to no<LineBreak/>
										longer be a Token Interaction, the Group will no longer be a valid Token Interaction Group.
									</TextBlock>
								</Image.ToolTip>
							</Image>
							<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"  Width="24" Height="24" VerticalAlignment="Center" Margin="5,0,0,0" ToolTipService.InitialShowDelay="0">
								<Image.ToolTip>
									<TextBlock>
										Select an Interaction Group from the list. Then designate how many of the Events in the group<LineBreak/>
										will be randomly used. A mix of Fixed and Random Token Interactions can be used in a Block.<LineBreak/>
										Only Events that are marked Token Interaction can be in a Group.
									</TextBlock>
								</Image.ToolTip>
							</Image>
						</StackPanel>
						<StackPanel Margin="10,0">
							<TextBlock x:Name="selectedInfoText" Style="{StaticResource SubText}" TextWrapping="Wrap" Text="There are X Token Interactions in the selected group." VerticalAlignment="Center" FontWeight="Bold"/>
							<TextBlock x:Name="fixedCountText" Style="{StaticResource SubText}" Text="There are X fixed Tokens in this Block." FontWeight="Bold"/>
						</StackPanel>
					</UniformGrid>

					<TextBlock x:Name="spaceInfoText2" Style="{StaticResource Heading}" Text="There are X spaces available on this Block's tiles to place Tokens." Margin="0,5,0,0"/>

					<StackPanel Orientation="Horizontal">
						<TextBlock x:Name="numIntersUsedText" Style="{StaticResource SubText}" Text="Randomly use how many of the Events from the selected Interaction Group, up to a maximum of X?" VerticalAlignment="Center"/>
						<TextBox Text="{Binding chapter.randomInteractionGroupCount}" x:Name="numIntersUsed" Width="25" Margin="10,0" TextChanged="numIntersUsed_TextChanged" Height="24" IsEnabled="{Binding chapter.usesRandomGroups}"/>
					</StackPanel>
				</StackPanel>
			</Border>

			<!--text-->
			<Border x:Name="flavorBox" Style="{StaticResource callout}" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}" Margin="0,5,0,0">
				<StackPanel>
					<TextBlock Text="Flavor Text" Style="{StaticResource Heading}"/>
					<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when the Tile Block is activated. It is only shown once. <Bold><Italic>Optional</Italic></Bold>
					</TextBlock>
					<Grid Visibility="{Binding ElementName=noflavor,Path=IsChecked,Converter={StaticResource b2invvis}}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="auto"/>
						</Grid.ColumnDefinitions>
						<Border BorderBrush="white" BorderThickness="1" Padding="5" Margin="0,5">
							<!-- <TextBlock x:Name="flavorTB" Text="{Binding chapter.flavorBookData.pages[0]}" TextTrimming="WordEllipsis" VerticalAlignment="Center" Height="19" Foreground="White"/> -->
							<FlowDocumentScrollViewer x:Name="flavorTB" Document="{Binding FlavorFlowDocument}" MaxHeight="32" Foreground="White" VerticalScrollBarVisibility="Disabled"/>
						</Border>
						<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46">
							<Image Source="/JiME;component/Assets/edit.png"/>
						</Button>
					</Grid>
					<CheckBox x:Name="noflavor" Content="No Flavor Text" Foreground="White" IsChecked="{Binding chapter.noFlavorText}"/>
				</StackPanel>
			</Border>

			<!--trigger when first explored-->
			<Border x:Name="exploreBox" Style="{StaticResource callout}" Margin="0,0,0,10" IsEnabled="{Binding chapter.isEmpty, Converter={StaticResource binv}}">
				<Grid>
					<StackPanel>
						<TextBlock Text="Trigger On First Exploration (Optional):" Style="{StaticResource Heading}"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="This Trigger is set when any Tile in this Block is first explored. It is only triggered once."/>

						<StackPanel Orientation="Horizontal" Margin="0,5,0,5">
							<ComboBox x:Name="nextTriggerCB" ItemsSource="{Binding Source={StaticResource cvsTriggerAfterFirst}}" HorizontalAlignment="Left" VerticalAlignment="Center" DisplayMemberPath="dataName" MinWidth="250" SelectedValuePath="dataName" SelectedValue="{Binding chapter.exploreTrigger}"/>

							<Button x:Name="addExploreTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddExploreTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</StackPanel>
				</Grid>
			</Border>

			<!--trigger when all tiles have been explored-->
			<Border x:Name="exploredAllTilesBox" Style="{StaticResource callout}" Margin="0,0,0,10">
				<Grid>
					<StackPanel>
						<TextBlock Text="Trigger After Exploring All Tiles (Optional):" Style="{StaticResource Heading}"/>
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Text="This Trigger is set when all Tiles in this Block have been explored. It is only triggered once."/>

						<StackPanel Orientation="Horizontal" Margin="0,5,0,0">
							<ComboBox x:Name="exploredAllTilesTriggerCB" ItemsSource="{Binding Source={StaticResource cvsTriggerAfterAll}}" HorizontalAlignment="Left" VerticalAlignment="Center" DisplayMemberPath="dataName" MinWidth="250" SelectedValuePath="dataName" SelectedValue="{Binding chapter.exploredAllTilesTrigger}"/>

							<Button x:Name="addExploredAllTilesTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddExploredAllTilesTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</StackPanel>

					<!--footer-->
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
						<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
							<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
						</Button>

						<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
							<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
						</Button>
					</StackPanel>
				</Grid>
			</Border>


		</StackPanel>

		<!--footer-->
		<!--
		<StackPanel Grid.Row="1">
			<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
				<WrapPanel HorizontalAlignment="Right" >

					<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
						<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
					</Button>

					<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
						<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
					</Button>
				</WrapPanel>
			</Border>
		</StackPanel>
		-->
	</Grid>

</Window>
