<Window x:Class="JiME.Views.BranchInteractionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:local="clr-namespace:JiME"
		xmlns:uc="clr-namespace:JiME.UserControls"
        mc:Ignorable="d"
        ContentRendered="Window_ContentRendered"
        Title="Story Branch Event Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="750" Closing="Window_Closing">

	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="bvis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<Style TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Margin" Value="0,5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
		<CollectionViewSource x:Key="cvsTriggeredBy" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsTriggerAfter" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>

		<CollectionViewSource x:Key="cvsTriggerCondition" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>

		<CollectionViewSource x:Key="cvsEventTrueTrigger" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsEventFalseTrigger" Source="{Binding scenario.triggersObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>

		<CollectionViewSource x:Key="cvsEventTrueEvent" Source="{Binding scenario.interactionObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="cvsEventFalseEvent" Source="{Binding scenario.interactionObserver}">
			<CollectionViewSource.SortDescriptions>
				<scm:SortDescription PropertyName="dataName"/>
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
	</Window.Resources>

	<StackPanel>
		<TabControl Margin="5" Background="#FF2D2D30" BorderThickness="0,1,0,0">

			<!--general properties-->
			<TabItem Header="General Properties" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}" Visibility="{Binding isThreatTriggered, Converter={StaticResource bvis}}" Margin="0,0,0,10">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="This Event is triggered by a Scenario Threat Threshold." HorizontalAlignment="Center"/>

							<TextBlock Style="{StaticResource SubText}" HorizontalAlignment="Center">
								Events triggered by Threat Thresholds cannot be Token Interactions and cannot be Triggered By another source.
							</TextBlock>

						</StackPanel>
					</Border>


					<Border Style="{StaticResource callout}">
						<UniformGrid Columns="2">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="Event Name:"/>
								<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
								</TextBlock>
								<TextBox x:Name="nameTB" Text="{Binding interaction.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" TextChanged="nameTB_TextChanged"/>

								<StackPanel Orientation="Horizontal" Margin="0,5,0,0">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,0" Text="Lore/ XP / Threat Rewards:"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.loreReward}"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.xpReward}" Margin="10,0"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.threatReward}"/>
								</StackPanel>
								<TextBlock Text="Rewards are given after the Event is finished activating." Style="{StaticResource SubText}" Margin="0,5,0,0"/>
							</StackPanel>

							<StackPanel Orientation="Vertical">
								<StackPanel Orientation="Horizontal" VerticalAlignment="Center">
									<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
										<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
									</Button>
									<StackPanel Margin="10,0,0,0">
										<TextBlock Style="{StaticResource SubText}" Text="You can place this Event into a Random Interaction Group." TextWrapping="Wrap" VerticalAlignment="Center" Width="290"/>
										<TextBlock x:Name="groupInfo" Margin="0,5,0,0" Style="{StaticResource SubText}" Text="This Event is in the following group: None"/>
									</StackPanel>
								</StackPanel>
								<CheckBox x:Name="isReusableCB" Margin="32,20,0,0" Content="This grouped Event can be used more than once" Foreground="White" IsChecked="{Binding interaction.isReusable}" Visibility="Visible" VerticalAlignment="Top"/>
							</StackPanel>

						</UniformGrid>
					</Border>

					<!--token interaction-->
					<Border x:Name="isEventBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<uc:TokenTypeSelector x:Name="tokenTypeSelector" Interaction="{Binding interaction}" Scenario="{Binding scenario}"/>
						</StackPanel>
					</Border>

					<!--triggers-->
					<Border x:Name="triggerBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<UniformGrid Columns="2">
								<StackPanel HorizontalAlignment="Left">
									<TextBlock Text="Triggered By (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" Name="triggeredByCB" Width="250" ItemsSource="{Binding Source={StaticResource cvsTriggeredBy}}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerName}" SelectedValuePath="dataName" Margin="0" HorizontalAlignment="Left" IsEnabled="{Binding interaction.isTokenInteraction, Converter={StaticResource binv}}"/>
										<Button x:Name="addMainTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerButton_Click" IsEnabled="{Binding interaction.isTokenInteraction, Converter={StaticResource binv}}">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>

								<StackPanel HorizontalAlignment="Left" Margin="10,0,0,0">
									<TextBlock Text="Set Trigger After Event Is Resolved (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" HorizontalAlignment="Left" Width="250" ItemsSource="{Binding Source={StaticResource cvsTriggerAfter}}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerAfterName}" SelectedValuePath="dataName" Margin="0"/>
										<Button x:Name="addMainTriggerAfterButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerAfterButton_Click">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>
							</UniformGrid>
							<TextBlock Style="{StaticResource SubText}" Margin="0,5,0,0" TextWrapping="Wrap">
								Multiple Events can be 'Triggered By' the same Trigger. When this happens, only ONE of the Events will be randomly chosen to fire.
							</TextBlock>
						</StackPanel>
					</Border>

					<UniformGrid Columns="2">
						<!--event text-->
						<Border x:Name="eventbox" Style="{StaticResource callout}" Margin="0,10,5,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>

								<StackPanel>
									<TextBlock Text="Event Text" Style="{StaticResource Heading}"/>
									<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
										Leave the Event Text blank to make this Event activate silently (default) without showing any text when it activates.
									</TextBlock>
								</StackPanel>
								<Button Grid.Column="1" x:Name="editEventButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditEventButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</Border>

						<!--flavor text-->
						<Border x:Name="flavorbox" Style="{StaticResource callout}" Margin="5,10,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>

								<StackPanel>
									<TextBlock Text="Flavor Text For Token Interaction" Style="{StaticResource Heading}"/>
									<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
					This text is shown when a player interacts with a Token. Use it to hint at the Event. Flavor Text is only shown if this Event is a Token Interaction.
									</TextBlock>
								</StackPanel>
								<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46" IsEnabled="{Binding interaction.isTokenInteraction}">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</Border>
					</UniformGrid>

				</StackPanel>
			</TabItem>

			<TabItem Padding="5" Header="Story Branch">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}">
						<TextBlock Style="{StaticResource SubText}" Text="A Story Branch is a special kind of Event that tests whether a specified Trigger has been set, then fires additional Triggers or Events based on the result. By default, it activates silently without showing its Event Text." TextWrapping="Wrap"/>
					</Border>

					<Border Style="{StaticResource callout}" Margin="0,10,0,10">
						<StackPanel Orientation="Horizontal">
							<TextBlock Style="{StaticResource Heading}" Text="If this Trigger has been set..." Margin="0,0,10,0"/>

							<ComboBox x:Name="triggerCB" HorizontalAlignment="Left" VerticalAlignment="Center" ItemsSource="{Binding Source={StaticResource cvsTriggerCondition}}" SelectedValuePath="dataName" SelectedValue="{Binding interaction.triggerTest}" DisplayMemberPath="dataName" MinWidth="200" SelectionChanged="triggerCB_SelectionChanged"/>

							<Button x:Name="addTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton_Click">
								<Image Source="/JiME;component/Assets/add2.png"/>
							</Button>
						</StackPanel>
					</Border>

					<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
						<RadioButton x:Name="eventTestRB" GroupName="branchrb"/>
						<Border Style="{StaticResource callout}" Width="679" Margin="10,0,0,0">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="...Activate One Of These Events:"/>
								<UniformGrid Columns="2">
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Set (True)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
											<ComboBox x:Name="eventTrue" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding Source={StaticResource cvsEventTrueEvent}}" SelectedValue="{Binding interaction.triggerIsSet}" SelectedValuePath="dataName" FontSize="12" MinWidth="260"/>
											<uc:AddEventPopup Scenario="{Binding scenario}" HorizontalAlignment="Right" ActionToHandleCreatedEvent="CreatedTrueEvent"/>
										</StackPanel>
									</GroupBox>
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Not Set (False)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
											<ComboBox x:Name="eventNotTrue" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding Source={StaticResource cvsEventFalseEvent}}" SelectedValue="{Binding interaction.triggerNotSet}" SelectedValuePath="dataName" FontSize="12" MinWidth="260"/>
											<uc:AddEventPopup Scenario="{Binding scenario}" HorizontalAlignment="Right" ActionToHandleCreatedEvent="CreatedFalseEvent" />
										</StackPanel>
									</GroupBox>
								</UniformGrid>
							</StackPanel>
						</Border>
					</StackPanel>

					<TextBlock Text="-OR-" Style="{StaticResource Heading}" HorizontalAlignment="Center" Margin="0,5"/>

					<StackPanel Orientation="Horizontal">
						<RadioButton x:Name="triggerTestRB" GroupName="branchrb"/>
						<Border Style="{StaticResource callout}" Width="679" Margin="10,0,0,0">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="...Fire One Of These Triggers:"/>
								<UniformGrid Columns="2">
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Set (True)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal">
											<ComboBox x:Name="eventTrueTrigger" HorizontalAlignment="Stretch" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding Source={StaticResource cvsEventTrueTrigger}}" SelectedValue="{Binding interaction.triggerIsSetTrigger}" SelectedValuePath="dataName" FontSize="12" MinWidth="260"/>

											<Button x:Name="addTriggerButton2" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton2_Click">
												<Image Source="/JiME;component/Assets/add2.png"/>
											</Button>

										</StackPanel>
									</GroupBox>
									<GroupBox Style="{StaticResource DefaultGroupBox}" Header="If It's Not Set (False)..." FontWeight="Normal">
										<StackPanel Orientation="Horizontal">
											<ComboBox x:Name="eventNotTrueTrigger" VerticalAlignment="Center" DisplayMemberPath="dataName" ItemsSource="{Binding Source={StaticResource cvsEventFalseTrigger}}" SelectedValue="{Binding interaction.triggerNotSetTrigger}" SelectedValuePath="dataName" FontSize="12" MinWidth="260"/>

											<Button x:Name="addTriggerButton3" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="AddTriggerButton3_Click">
												<Image Source="/JiME;component/Assets/add2.png"/>
											</Button>
										</StackPanel>

									</GroupBox>
								</UniformGrid>
							</StackPanel>
						</Border>
					</StackPanel>
				</StackPanel>
			</TabItem>
		</TabControl>

		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</StackPanel>
</Window>
