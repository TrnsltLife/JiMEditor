<Window x:Class="JiME.Views.RewardInteractionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        Title="Reward Event Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="750" Closing="Window_Closing" ContentRendered="Window_ContentRendered" MinHeight="250">

	<Window.Resources>
		<BooleanToVisibilityConverter x:Key="bvis"/>
		<local:BoolInvertConverter x:Key="binv"/>
		<Style TargetType="RadioButton">
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="Margin" Value="0,5"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
		</Style>
	</Window.Resources>

	<StackPanel>
		<TabControl Margin="5" Background="#FF2D2D30" BorderThickness="0,1,0,0">

			<!--general properties-->
			<TabItem Header="General Properties" Padding="5">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}" Visibility="{Binding isThreatTriggered, Converter={StaticResource bvis}}" Margin="0,0,0,10">
						<StackPanel>
							<TextBlock Style="{StaticResource Heading}" Text="This Event is triggered by a Scenario Threat Threshold." HorizontalAlignment="Center"/>

							<TextBlock Style="{StaticResource SubText}" HorizontalAlignment="Center">
								Events triggered by Threat Thresholds cannot be Token Interactions and cannot be Triggered By another source.
							</TextBlock>

						</StackPanel>
					</Border>

					<!--event name/lore-->
					<Border Style="{StaticResource callout}">
						<UniformGrid Columns="2">
							<StackPanel>
								<TextBlock Style="{StaticResource Heading}" Text="Event Name:"/>
								<TextBlock Style="{StaticResource SubText}">
					A short name used within the Editor. <Bold><Italic>Required</Italic></Bold>
								</TextBlock>
								<TextBox x:Name="nameTB" Text="{Binding interaction.dataName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" TextChanged="nameTB_TextChanged"/>

								<StackPanel Orientation="Horizontal" Margin="0,5,0,0" Visibility="Collapsed">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Lore/ XP / Threat Rewards:"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.loreReward}"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.xpReward}" Margin="10,0"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.threatReward}"/>
								</StackPanel>
								<TextBlock Text="Rewards are given after the Event is finished activating." Style="{StaticResource SubText}" Margin="0,5,0,0" Visibility="Collapsed"/>
							</StackPanel>

							<StackPanel Orientation="Horizontal" VerticalAlignment="Center" Visibility="Collapsed">
								<Button x:Name="groupHelp" Background="#FFC98800" Click="groupHelp_Click" Width="32" Height="32" Margin="10,0,0,0">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
								<StackPanel Margin="10,0,0,0">
									<TextBlock Style="{StaticResource SubText}" Text="You can place this Event into a Random Interaction Group." TextWrapping="Wrap" VerticalAlignment="Center" Width="290"/>
									<TextBlock x:Name="groupInfo" Margin="0,5,0,0" Style="{StaticResource SubText}" Text="This Event is in the following group: None"/>
								</StackPanel>
							</StackPanel>
						</UniformGrid>
					</Border>

					<!--{Binding interaction.isTokenInteraction}-->
					<!--token interaction-->
					<Border x:Name="isEventBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="auto"/>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>

								<CheckBox x:Name="isTokenCB" Content="This Event is a Token Interaction" Foreground="White" IsChecked="{Binding interaction.isTokenInteraction}" VerticalAlignment="Center" Click="isTokenCB_Click" IsEnabled="False"/>

								<Button Grid.Column="2" x:Name="tokenHelp" Background="#FFC98800" Click="tokenHelp_Click" Width="32" Height="32" Margin="10,0,0,0" HorizontalAlignment="Right">
									<Image Source="/JiME;component/Assets/help.png" Stretch="Uniform"/>
								</Button>
							</Grid>

							<StackPanel x:Name="tokenTypeBox" Orientation="Horizontal" Visibility="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource bvis}}">
								<TextBlock Style="{StaticResource Heading}" Text="Token Type:" Margin="0,0,10,0"/>
								<RadioButton x:Name="personRadio" Content="Person" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="searchRadio" Content="Search" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="threatRadio" Content="Threat" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="darkRadio" Content="Darkness" Click="tokenTypeClick"/>
								<RadioButton x:Name="difficultGroundRadio" Content="Difficult Ground" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="fortifiedRadio" Content="Fortified" Margin="0,0,20,0" Click="tokenTypeClick"/>
								<RadioButton x:Name="terrainRadio" Content="Terrain" Margin="0,0,20,0" Click="tokenTypeClick"/>
							</StackPanel>
							<StackPanel Orientation="Horizontal" Name="personType" Visibility="Collapsed">
								<TextBlock Text="Person Type:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
								<RadioButton x:Name="humanRadio" Content="Human" Margin="0,0,20,0"/>
								<RadioButton x:Name="elfRadio" Content="Elf" Margin="0,0,20,0"/>
								<RadioButton x:Name="hobbitRadio" Content="Hobbit" Margin="0,0,20,0"/>
								<RadioButton x:Name="dwarfRadio" Content="Dwarf"/>
							</StackPanel>
							<WrapPanel Orientation="Horizontal" Name="terrainType" Visibility="Collapsed">
								<TextBlock Text="Terrain Type:" Style="{StaticResource Heading}" Margin="0,0,10,0"/>
								<RadioButton x:Name="barrelsRadio" Content="Barrels" Margin="0,0,20,0"/>
								<RadioButton x:Name="barricadeRadio" Content="Barricade" Margin="0,0,20,0"/>
								<RadioButton x:Name="boulderRadio" Content="Boulder" Margin="0,0,20,0"/>
								<RadioButton x:Name="bushRadio" Content="Bush" Margin="0,0,20,0"/>
								<RadioButton x:Name="chestRadio" Content="Chest" Margin="0,0,20,0"/>
								<RadioButton x:Name="elevationRadio" Content="Elevation" Margin="0,0,20,0"/>
								<RadioButton x:Name="fenceRadio" Content="Fence" Margin="0,0,20,0"/>
								<RadioButton x:Name="firePitRadio" Content="Fire Pit" Margin="0,0,20,0"/>
								<RadioButton x:Name="fountainRadio" Content="Fountain" Margin="0,0,20,0"/>
								<RadioButton x:Name="logRadio" Content="Log" Margin="0,0,20,0"/>
								<RadioButton x:Name="mistRadio" Content="Mist" Margin="0,0,20,0"/>
								<RadioButton x:Name="pitRadio" Content="Pit" Margin="0,0,20,0"/>
								<RadioButton x:Name="pondRadio" Content="Pond" Margin="0,0,20,0"/>
								<RadioButton x:Name="rubbleRadio" Content="Rubble" Margin="0,0,20,0"/>
								<RadioButton x:Name="statueRadio" Content="Statue" Margin="0,0,20,0"/>
								<RadioButton x:Name="streamRadio" Content="Stream" Margin="0,0,20,0"/>
								<RadioButton x:Name="tableRadio" Content="Table" Margin="0,0,20,0"/>
								<RadioButton x:Name="trenchRadio" Content="Trench" Margin="0,0,20,0"/>
								<RadioButton x:Name="wallRadio" Content="Wall" Margin="0,0,20,0"/>
								<RadioButton x:Name="webRadio" Content="Web" Margin="0,0,20,0"/>
							</WrapPanel>

							<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap" Margin="0,5,0,0">
							This Event can't be assigned to a Token as a Token Interaction.
							</TextBlock>
						</StackPanel>
					</Border>

					<!--triggers-->
					<Border x:Name="triggerBox" Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel>
							<UniformGrid Columns="2">
								<StackPanel HorizontalAlignment="Left">
									<TextBlock Text="Triggered By (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" Name="triggeredByCB" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerName}" SelectedValuePath="dataName" Margin="0" HorizontalAlignment="Left" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}"/>
										<Button x:Name="addMainTriggerButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerButton_Click" IsEnabled="{Binding ElementName=isTokenCB, Path=IsChecked, Converter={StaticResource binv}}">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>

								<StackPanel HorizontalAlignment="Left" Margin="10,0,0,0">
									<TextBlock Text="Set Trigger After Event Is Resolved (Optional):" Style="{StaticResource Heading}"/>
									<StackPanel Orientation="Horizontal">
										<ComboBox VerticalAlignment="Center" HorizontalAlignment="Left" Width="250" ItemsSource="{Binding scenario.triggersObserver}" DisplayMemberPath="dataName" SelectedValue="{Binding interaction.triggerAfterName}" SelectedValuePath="dataName" Margin="0"/>
										<Button x:Name="addMainTriggerAfterButton" Background="MediumSeaGreen" Margin="10,0" Height="32" Width="32" Click="addMainTriggerAfterButton_Click">
											<Image Source="/JiME;component/Assets/add2.png"/>
										</Button>
									</StackPanel>
								</StackPanel>
							</UniformGrid>
							<TextBlock Style="{StaticResource SubText}" Margin="0,5,0,0" TextWrapping="Wrap">
								Multiple Events can be 'Triggered By' the same Trigger. When this happens, only ONE of the Events will be randomly chosen to fire.
							</TextBlock>
						</StackPanel>
					</Border>

					<UniformGrid Columns="2">
						<!--event text-->
						<Border x:Name="eventbox" Style="{StaticResource callout}" Margin="0,10,5,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>

								<StackPanel>
									<TextBlock Text="Event Text" Style="{StaticResource Heading}"/>
									<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
										The Event Text for this Event is optional. Leave it blank to NOT SHOW any text after it activates.
									</TextBlock>
								</StackPanel>
								<Button Grid.Column="1" x:Name="editEventButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditEventButton_Click" Width="46" Height="46">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</Border>

						<!--flavor text-->
						<Border x:Name="flavorbox" Style="{StaticResource callout}" Margin="5,10,0,0">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="auto"/>
								</Grid.ColumnDefinitions>

								<StackPanel>
									<TextBlock Text="Flavor Text For Token Interaction" Style="{StaticResource Heading}"/>
									<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
										This Event doesn't use Flavor Text.
									</TextBlock>
								</StackPanel>
								<Button Grid.Column="1" x:Name="editFlavorButton" Background="CornflowerBlue" Margin="10,0,0,0" Click="EditFlavorButton_Click" Width="46" Height="46" IsEnabled="False">
									<Image Source="/JiME;component/Assets/edit.png"/>
								</Button>
							</Grid>
						</Border>
					</UniformGrid>

				</StackPanel>
			</TabItem>

			<TabItem Padding="5" Header="Rewards">
				<StackPanel Margin="0,5,0,0">
					<Border Style="{StaticResource callout}">
						<TextBlock Style="{StaticResource SubText}" TextWrapping="Wrap">
							The Reward Event simply gives the players the reward(s) you set below when it activates. It can't be assigned to a Token as a Token Interaction, so it has no Flavor Text. It can only activate after being Triggered (<Bold>Triggered By</Bold> in the General Properties tab). This Event is silent - it does not show Event Text after activating.
						</TextBlock>
					</Border>

					<Border Style="{StaticResource callout}" Margin="0,10,0,0">
						<StackPanel Orientation="Horizontal">
							<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,0" Text="Lore/ XP / Threat Reduction Rewards:"/>
							<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.rewardLore}"/>
							<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.rewardXP}" Margin="10,0"/>
							<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding interaction.rewardThreat}"/>
						</StackPanel>
					</Border>
				</StackPanel>
			</TabItem>
		</TabControl>

		<!--footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</StackPanel>
</Window>
