<Window x:Class="JiME.Views.MonsterModifierEditorWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:JiME"
        mc:Ignorable="d"
        Title="Monster Bonus Editor" Style="{StaticResource DefaultWindow}" WindowStartupLocation="CenterScreen" Width="750" ContentRendered="Window_ContentRendered">

	<Window.Resources>
		<local:BoolInvertConverter x:Key="b2e"/>
		<BooleanToVisibilityConverter x:Key="b2vis"/>
		<local:BoolInvertVisibility x:Key="b2invVis"/>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="*"/>
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>

		<StackPanel Margin="5">
				<Border Style="{StaticResource callout}" Margin="0,10">
				<UniformGrid Columns="2">
					<StackPanel>
						<TextBlock Style="{StaticResource Heading}" Text="Monster Bonus Name (in-game):"/>
						<TextBlock Style="{StaticResource SubText}">
							Displayed in the Combat Panel in the game. <Bold><Italic>Required</Italic></Bold>
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}"></TextBlock>
						<TextBox x:Name="nameTB" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" Text="{Binding shortName, UpdateSourceTrigger=PropertyChanged}"/>
					</StackPanel>

					<StackPanel>
						<TextBlock Style="{StaticResource Heading}" Text="In-Editor Name:"/>
						<TextBlock Style="{StaticResource SubText}">
							Only displayed in the editor. Use it to distinguish
						</TextBlock>
						<TextBlock Style="{StaticResource SubText}">
							Bonuses that have the same in-game names.
						</TextBlock>
						<TextBox x:Name="dataNameTB" Style="{StaticResource DefaultTextBox}" Margin="0,5" Width="250" HorizontalAlignment="Left" Text="{Binding modifier.dataName}"/>
					</StackPanel>
				</UniformGrid>
			</Border>

			<GroupBox Header="Bonuses" FontSize="14" Padding="0" Style="{StaticResource DefaultGroupBox}" Margin="0,10,0,0">
				<StackPanel>
					<Border Style="{StaticResource callout}" Margin="5">
						<StackPanel>
							<UniformGrid Columns="5" Margin="0,0,0,15">

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Health"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding modifier.health}"/>
								</StackPanel>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Armor"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding modifier.armor}"/>
								</StackPanel>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Sorcery"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding modifier.sorcery}"/>
								</StackPanel>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Damage"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding modifier.damage}"/>
								</StackPanel>

								<StackPanel Orientation="Horizontal">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Fear"/>
									<TextBox Style="{StaticResource DefaultTextBox}" Width="25" Text="{Binding modifier.fear}"/>
								</StackPanel>
							</UniformGrid>

							<UniformGrid Columns="2">
								<StackPanel Orientation="Vertical">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Immunity"/>
									<TextBlock Style="{StaticResource SubText}" Margin="0,0,10,5" >The enemy will be immune to the following effects.</TextBlock>
									<CheckBox x:Name="immuneCleaveCheck" Content="Cleave" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.immuneCleave, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="immuneLethalCheck" Content="Lethal" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.immuneLethal, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="immunePierceCheck" Content="Pierce" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.immunePierce, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="immuneSmiteCheck" Content="Smite" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.immuneSmite, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="immuneStunCheck" Content="Stun" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.immuneStun, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="immuneSunderCheck" Content="Sunder" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.immuneSunder, UpdateSourceTrigger=PropertyChanged}"/>
								</StackPanel>

								<StackPanel Orientation="Vertical">
									<TextBlock Style="{StaticResource Heading}" Margin="0,0,10,5" Text="Feigned Immunity"/>
									<TextBlock Style="{StaticResource SubText}" Margin="0,0,10,5" >The game will describe the enemy as being immune, but there will be no actual effect.</TextBlock>
									<CheckBox x:Name="fakeCleaveCheck" Content="Cleave" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.fakeCleave, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="fakeLethalCheck" Content="Lethal" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.fakeLethal, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="fakePierceCheck" Content="Pierce" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.fakePierce, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="fakeSmiteCheck" Content="Smite" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.fakeSmite, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="fakeStunCheck" Content="Stun" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.fakeStun, UpdateSourceTrigger=PropertyChanged}"/>
									<CheckBox x:Name="fakeSunderCheck" Content="Sunder" Foreground="white" VerticalAlignment="Center" IsChecked="{Binding modifier.fakeSunder, UpdateSourceTrigger=PropertyChanged}"/>
								</StackPanel>

							</UniformGrid>
						</StackPanel>
					</Border>
				</StackPanel>
			</GroupBox>
		</StackPanel>

		<!--Footer-->
		<Border Grid.Row="1" BorderThickness="0,1,0,0" BorderBrush="Silver" HorizontalAlignment="Stretch" Background="#FF46464A">
			<WrapPanel HorizontalAlignment="Right" >

				<Button x:Name="okButton" Margin="10" Background="MediumSeaGreen" Click="OkButton_Click" IsDefault="True">
					<Image Source="/JiME;component/Assets/ok.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>

				<Button x:Name="cancelButton" Margin="0,10,10,10" Background="{StaticResource bgCancelDelete}" Click="CancelButton_Click" IsCancel="True">
					<Image Source="/JiME;component/Assets/cancel.png" Stretch="Uniform" Width="32" Margin="5"/>
				</Button>
			</WrapPanel>
		</Border>
	</Grid>

</Window>
